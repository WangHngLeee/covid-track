{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeurl","axios","get","fetchDailyDate","modifiedData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Countries","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","covidimg","alt","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29894ba3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport {Card,CardContent,Typography,Grid} from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\"\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) =>{\n    if(!confirmed){\n        return 'Loading...'\n    }\n    return(\n        <div className={styles.container}>\n            <Grid container spacing={3} justify={\"center\"}>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\n                    <CardContent>\n                        <Typography color={\"textSecondary\"} gutterBottom>Infected</Typography>\n                        <Typography variant={\"h5\"}>\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color={\"textSecondary\"}>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant={\"body2\"}>Number of active cases</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\n                    <CardContent>\n                        <Typography color={\"textSecondary\"} gutterBottom>Recovered</Typography>\n                        <Typography variant={\"h5\"}>\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color={\"textSecondary\"}>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant={\"body2\"}>Number of recoveries cases</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\n                    <CardContent>\n                        <Typography color={\"textSecondary\"} gutterBottom>Deaths</Typography>\n                        <Typography variant={\"h5\"}>\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color={\"textSecondary\"}>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant={\"body2\"}>Number of death cases</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeurl = url;\n    if(country){\n        changeurl = `${url}/countries/${country}`;\n    }\n    try {\n        const { data:{ confirmed,recovered,deaths,lastUpdate }} = await axios.get(changeurl);\n\n        return { confirmed, recovered, deaths, lastUpdate }\n    }catch (error) {\n        \n    }\n}\n    \nexport const fetchDailyDate = async () =>{\n    try{\n        const {data} = await axios.get(`${url}/daily`);\n        const modifiedData = data.map((dailyData)=>({\n            confirmed:dailyData.confirmed.total,\n            deaths:dailyData.deaths.total,\n            date:dailyData.reportDate,\n        }))\n        return modifiedData;\n    }catch (error) {\n        console.log(error);\n    }\n}\nexport const fetchCountries = async() =>{\n    try{\n        const {data:{countries}} =  await axios.get(`${url}/countries`);\n        return countries.map((country)=>country.name);\n    }catch (e) {\n        console.log(e);\n\n    }\n\n}","import React, {useState, useEffect, useDebugValue} from \"react\";\nimport {fetchDailyDate} from \"../../api\";\nimport {Line,Bar} from \"react-chartjs-2\";\nimport styles from './Charts.module.css';\n\nconst Charts = ({data:{confirmed,recovered,deaths},country}) =>{\n    const [dailyData,setDailyData] = useState({});\n    useEffect(()=>{\n        const fetchAPI = async () =>{\n            setDailyData(await fetchDailyDate());\n        }\n        fetchAPI();\n    },[]);\n    const lineChart =(\n        dailyData.length\n        ?(\n        <Line\n            data={{\n                labels: dailyData.map(({date})=>date),\n                datasets:[{\n                    data:dailyData.map(({ confirmed })=>confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill:true,\n                },{\n                    data:dailyData.map(({ deaths })=>deaths),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255,0,0,0.5)',\n                    fill:true,\n\n                }],\n            }}\n        />) : null\n    );\n    const barChart = (\n        confirmed\n        ?(\n            <Bar\n                data={{\n                    labels:['Infected','Recovered','Deaths '],\n                    datasets:[{\n                        labels:'People',\n                        backgroundColor:[\n                            'rgba(0,0,255,0.5)',\n                            'rgba(0,255,0,0.5)',\n                            'rgba(255,0,0,0.5)'\n                        ],\n                        data:[confirmed.value,recovered.value,deaths.value]\n                    }]\n\n                }}\n                options={{\n                    legend:{display:false},\n                    title:{display:true,text: `Current state in ${country}` },\n\n                }}\n            />\n            ):null\n\n    );\n\n    return(\n        <div className={styles.container}>\n            {country? barChart:lineChart}\n        </div>\n    )\n}\nexport default Charts;\n","\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({handleCountryChange}) => {\n    const [countries, setCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setCountries(await fetchCountries());\n        };\n\n        fetchAPI();\n    }, [setCountries]);\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    );\n};\n\nexport default Countries;\n","import React from \"react\";\nimport {Cards, Charts, CountryPicker} from './components';\nimport styles from './App.module.css';\nimport { fetchData } from \"./api\"\nimport covidimg from './images/image.png';\nclass App extends React.Component{\n    state={\n        data: {},\n        country:'',\n    }\n    async componentDidMount() {\n       const fetchedData = await fetchData();\n       this.setState({\n           data:fetchedData\n       });\n    }\n    handleCountryChange= async(country)=>{\n        const fetchedData = await fetchData(country);\n        this.setState(({\n            data:fetchedData,\n            country:country\n        }))\n        console.log(country)\n    }\n    render() {\n        const {data,country} = this.state;\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={covidimg} alt=\"COVID-19\"/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange = {this.handleCountryChange}/>\n                <Charts data={data} country = {country}/>\n            </div>\n        );\n    }\n}\nexport default App;","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}